version: "3.9"

services:

  traefik:
    image: traefik:v2.8
    container_name: traefik
    ports:
      - "80:80"
      - "443:443"
    env_file:
      - .env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --accesslog
      - --log
      - --api
      - --entrypoints.web.address=:80
      - --entrypoints.web-secure.address=:443
    labels:
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.routers.redirs.rule=hostregexp(`{host:.+}`)
      - traefik.http.routers.redirs.entrypoints=web
      - traefik.http.routers.redirs.middlewares=redirect-to-https

      # TODO: commented out due to traefik bug (there is no way to set url prefix for traefik api e.g. /traefik/api)
      # - traefik.http.routers.traefik.rule=PathPrefix(`/traefik`)
      # - traefik.http.routers.traefik.middlewares=traefik-strip
      # - traefik.http.middlewares.traefik-strip.stripprefix.prefixes=/traefik
      # - traefik.http.routers.traefik.priority=10
      # - traefik.http.routers.traefik.service=api@internal
      # - traefik.http.routers.traefik.middlewares=admin
      # - traefik.http.routers.traefik.tls=true
      # - traefik.http.routers.traefik.entrypoints=web-secure
      # - traefik.http.middlewares.admin.basicauth.users=${TRAEFIK_DASHBOARD_USER}:${TRAEFIK_DASHBOARD_PASSWORD}

  db:
    image: postgres:14-alpine
    volumes:
      - app-db-data:${PGDATA}
      - ./database/pg-init-scripts:/docker-entrypoint-initdb.d
    env_file:
      - .env
    environment:
      - POSTGRES_MULTIPLE_DATABASES=${POSTGRES_APP_DB},${POSTGRES_ORTHANC_DB}

  pgadmin:
    image: dpage/pgadmin4
    depends_on:
      - db
    env_file:
      - .env
    environment:
      - SCRIPT_NAME=/pgadmin
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    expose:
      - "5050"
    labels:
      - traefik.enable=true
      - traefik.http.routers.pg_admin.entrypoints=web-secure
      - traefik.http.routers.pg_admin.rule=PathPrefix(`/pgadmin`)
      - traefik.http.routers.pg_admin.priority=10
      - traefik.http.routers.pg_admin.tls=true
      - traefik.http.services.pg_admin.loadbalancer.server.port=5050

    # queue:
    #   image: rabbitmq:3
    # Using the below image instead is required to enable the "Broker" tab in the flower UI:
    # image: rabbitmq:3-management
    #

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      - db
    env_file:
      - .env
    expose:
      - "8000"
    labels:
      - traefik.enable=true
      - traefik.http.routers.backend.entrypoints=web-secure
      - traefik.http.routers.backend.rule=PathPrefix(`/api`)
      - traefik.http.routers.backend.priority=10
      - traefik.http.routers.backend.tls=true

  webapp:
    build:
      context: ./webapp
      dockerfile: Dockerfile
      args:
        - API_HOST_ORIGIN=${API_HOST_ORIGIN}
    env_file:
      - .env
    expose:
      - "80"
    labels:
      - traefik.enable=true
      - traefik.http.routers.webapp.entrypoints=web-secure
      - traefik.http.routers.webapp.rule=PathPrefix(`/`)
      - traefik.http.routers.webapp.priority=1
      - traefik.http.routers.webapp.tls=true

  orthanc:
    image: osimis/orthanc:20.4.2
    depends_on:
      - db
    volumes:
      # configuration file
      - ${ORTHANC_CONFIG}:${ORTHANC_CONFIG_INTERNAL}:ro
      # storage volume for raw dicoms
      - ${ORTHANC_DICOM_DATA}:${ORTHANC_DICOM_DATA_INTERNAL}
    environment:
      - POSTGRES_DB=${POSTGRES_ORTHANC_DB}
      # DICOMWeb Plugin
      - DICOM_WEB_PLUGIN_ENABLED=true
      # Postgres Plugin
      - POSTGRESQL_PLUGIN_ENABLED=true
    command: ${ORTHANC_CONFIG_INTERNAL}
    # expose:
    #   - "8042:8042"
    # labels:
    #     - traefik.enable=true
    #     - traefik.http.routers.backend.entrypoints=web-secure
    #     - traefik.http.routers.backend.rule=PathPrefix(`/dicom-web/wado`)
    #     - traefik.http.routers.backend.priority=10
    #     - traefik.http.routers.backend.tls=true

volumes:
  app-db-data:
